/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aisearch;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.LayoutManager;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;

/**
 *
 * @author josh
 */
public class Index extends javax.swing.JFrame {

    private ActionListener al;
    private Timer t;
    private int counter;

    /**
     * Creates new form Index
     */
    public Index() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("Find Path");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, 137, 32));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setText("A");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 130, 10, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aisearch/img/gray.png"))); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, -1, 55));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("C");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 200, 10, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setText("F");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 280, 10, -1));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setText("D");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 290, 10, -1));

        jLabel1.setText("Point A :");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, -1, -1));

        jLabel2.setText("Point B :");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 60, -1, -1));

        jLabel3.setText("To");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 30, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aisearch/img/gray.png"))); // NOI18N
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 260, -1, 55));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aisearch/img/gray.png"))); // NOI18N
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 180, -1, 55));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aisearch/img/gray.png"))); // NOI18N
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, -1, 55));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setText("E");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 290, 10, -1));

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aisearch/img/gray.png"))); // NOI18N
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 270, -1, 55));

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel20.setText("B");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 200, 10, -1));

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aisearch/img/gray.png"))); // NOI18N
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 180, -1, 55));

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel22.setText("G");
        jPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 280, 10, -1));

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aisearch/img/gray.png"))); // NOI18N
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 260, -1, 55));

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel24.setText("H");
        jPanel1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 280, 10, -1));

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aisearch/img/gray.png"))); // NOI18N
        jPanel1.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 260, -1, 55));

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel26.setText("I");
        jPanel1.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 270, 10, -1));

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aisearch/img/gray.png"))); // NOI18N
        jPanel1.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 250, -1, 55));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, 340, 20));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select...", "A", "B", "C", "D", "E", "F", "G", "H", "I" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 30, 120, -1));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select...", "A", "B", "C", "D", "E", "F", "G", "H", "I" }));
        jPanel1.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 30, 120, -1));
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 370, 310, 30));

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 660, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 340, 660, 60));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aisearch/img/arrow1.png"))); // NOI18N
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 200, 100, 70));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aisearch/img/line2.png"))); // NOI18N
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 130, 100, 70));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aisearch/img/arrow1.png"))); // NOI18N
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 200, 100, 70));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aisearch/img/arrow1.png"))); // NOI18N
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 130, 100, 70));

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aisearch/img/line2.png"))); // NOI18N
        jPanel1.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 200, 70, 70));

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aisearch/img/line2.png"))); // NOI18N
        jPanel1.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, 90, 70));

        jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aisearch/img/line3.png"))); // NOI18N
        jPanel1.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 220, 10, 40));

        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aisearch/img/line3.png"))); // NOI18N
        jPanel1.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 230, 10, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        jLabel7.setText ("");
        jLabel4.setIcon(new ImageIcon("img/gray.png"));
        jLabel21.setIcon(new ImageIcon("img/gray.png"));
        jLabel6.setIcon(new ImageIcon("img/gray.png"));
        jLabel16.setIcon(new ImageIcon("img/gray.png"));
        jLabel19.setIcon(new ImageIcon("img/gray.png"));
        jLabel5.setIcon(new ImageIcon("img/gray.png"));
        jLabel23.setIcon(new ImageIcon("img/gray.png"));
        jLabel25.setIcon(new ImageIcon("img/gray.png"));
        jLabel27.setIcon(new ImageIcon("img/gray.png"));
        counter = 0;
         

       if(jComboBox1.getSelectedIndex() != 0 && jComboBox2.getSelectedIndex() !=0)
        createNodes(jComboBox1.getSelectedItem().toString(),jComboBox2.getSelectedItem().toString());
       else
           JOptionPane.showMessageDialog(this,"Please Specify nodes to find path ","Selection Error",JOptionPane.ERROR_MESSAGE);
            
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Index().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

 public  String pointA;
    public  String pointB;

	public  Vector<Vector<String>> v = new Vector<Vector<String>>();
        
	public void addNode(int x,String x1, int y,  String y1){
		v.get(x).add(y1);
		v.get(y).add(x1);
	}
	
	 void printPath(Vector<Integer> stacks)
	{
            
            ArrayList <Integer> stack = new ArrayList<>(stacks);
            //System.out.println(
            //System.out.println(stack +"here o " + counter);
            jLabel8.setText("The Path from point " +pointA +" to point "+pointB +" is shown bellow : \n");
            
            al = new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                System.out.println(stack +": " + counter);
                if(counter  !=stack.size() -1){
                 jLabel7.setText (jLabel7.getText() + retrieveNode(stack.get(counter)) + " -> ");
                 setIcon(stack.get(counter));
                 counter++;
                }
                else {
                    jLabel7.setText (jLabel7.getText() + retrieveNode(stack.get(stack.size() - 1)));
                    setIcon(stack.get(stack.size() - 1));
                    t.stop();
                }
                //if(counter  ==stack.size() -1 && stack.size() !=1)
              //  jLabel7.setText (jLabel7.getText() + retrieveNode(stack.get(stack.size() - 1)));
            }

                private void setIcon(Integer get) {
                    
                    switch(get) {
                                        case 1: jLabel4.setIcon(new ImageIcon("img/joshbg.png"));
                                          break;
                                        case 2: jLabel21.setIcon(new ImageIcon("img/joshbg.png"));
                                        break;
                                        case 3: jLabel6.setIcon(new ImageIcon("img/joshbg.png"));
                                        break;
                                        case 4: jLabel16.setIcon(new ImageIcon("img/joshbg.png"));
                                        break;
                                        case 5: jLabel19.setIcon(new ImageIcon("img/joshbg.png"));
                                        break;
                                        case 6: jLabel5.setIcon(new ImageIcon("img/joshbg.png"));
                                        break;
                                        case 7: jLabel23.setIcon(new ImageIcon("img/joshbg.png"));
                                        break;
                                        case 8: jLabel25.setIcon(new ImageIcon("img/joshbg.png"));
                                        break;
                                       case 9: jLabel27.setIcon(new ImageIcon("img/joshbg.png"));
                                        break;
                            }
                   // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }
        };
        t= new Timer(400,al);
        t.start();
//try{
//System.out.println(stack.size() +": " + counter);
//		for(int i = 0; i < stack.size() - 1; i++)
//		{
//                    jLabel7.setText (jLabel7.getText() + retrieveNode(stack.get(i)) + " -> ");
//                  // Treaded.sleep(500);
//                   //System.out.println(2);
//		}
//                jLabel7.setText (jLabel7.getText() + retrieveNode(stack.get(stack.size() - 1)));
//}
//catch (Exception ee){
//}
	}
	 void DFS(boolean vis[], int x, int y, Vector<Integer> stack){
		stack.add(x);
		if (x == y)
		{
		
			// print the path and return on
			// reaching the destination node
			printPath(stack);
			return;
		}
		vis[x] = true;
	
		// if backtracking is taking place	
		if (v.get(x).size() > 0)
		{
			for(int j = 0; j < v.get(x).size(); j++)
			{
			
				// if the node is not visited
                            int index = getNode(x, j);
                            
				if (vis[index] == false)
				{
					DFS(vis, index, y, stack);
				}
			}
		}
		
		stack.remove(stack.size() - 1);
               // System.out.println(stack);
	}
	
	
	public void DFSFunction(int x, int y, int n, Vector<Integer> stack)
	{
	
		// visited array
		boolean vis[] = new boolean[n + 1];
		Arrays.fill(vis, false);
               // System.out.println(stack);
	
		DFS(vis, x, y, stack);
	}

    private int getNode(int x, int j) {
        int index = 0;
        switch(v.get(x).get(j)) {
                                        case "A":
                                          index = 1;
                                          break;
                                        case "B": index =2;
                                        break;
                                        case "C": index =3;
                                        break;
                                        case "D": index =4;
                                        break;
                                        case "E": index =5;
                                        break;
                                        case "F": index =6;
                                        break;
                                        case "G": index =7;
                                        break;
                                        case "H": index =8;
                                        break;
                                        case "I": index =9;
                                        break;
                            }
        return index;
      //  throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private String retrieveNode(Integer get) {
        
                String Node ="";
        switch(get) {
                                        case 1:Node = "A";
                                          break;
                                        case 2: Node ="B";
                                        break;
                                        case 3: Node ="C";
                                        break;
                                        case 4: Node ="D";
                                        break;
                                        case 5: Node ="E";
                                        break;
                                        case 6: Node ="F";
                                        break;
                                        case 7: Node ="G";
                                        break;
                                        case 8: Node ="H";
                                        break;
                                       case 9: Node ="I";
                                        break;
                            }
        return Node;
    }

    private int setIndex(String pointA) {
              int index = 0;
        switch(pointA) {
                                        case "A": index = 1;
                                          break;
                                        case "B": index =2;
                                        break;
                                        case "C": index =3;
                                        break;
                                        case "D": index =4;
                                        break;
                                        case "E": index =5;
                                        break;
                                        case "F": index =6;
                                        break;
                                        case "G": index =7;
                                        break;
                                        case "H": index =8;
                                        break;
                                        case "I": index =9;
                                        break;
                            }
        return index;  
        
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
   


    public void createNodes(String StringA, String StringB) {
       // System.out.print("josh");
        pointA = StringA;
        pointB = StringB;
        v.clear();
        
         for(int n = 0; n < 20; n++)
                    {
                        v.add(new Vector<String>());
                    }
                    int n = 10;
                    Vector<Integer> stack = new Vector<Integer>();

                    addNode(1, "A", 2,"B");
                    addNode(1, "A", 3,"C");
                    addNode(2, "B", 4,"D");
                    addNode(2, "B", 5,"E");
                    addNode(2, "B", 6,"F");
                    addNode(3, "C", 7,"G");
                    addNode(3, "C", 8,"H");
                    addNode(3, "C", 9,"I");
                    System.out.println(v);
		DFSFunction(setIndex(pointA),setIndex(pointB) , n, stack);
	
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
